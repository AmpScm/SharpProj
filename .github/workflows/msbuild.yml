name: SharpProj

on:
  push:
    branches: [ main, stable/* ]
  pull_request:
    branches: [ main, stable/* ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: build/src/SharpProj.sln
  buildDir: '${{ github.workspace }}/build'

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Git Checkout
      uses: actions/checkout@v3
      with:
        path: build

    - name: Setup VCPKG
      uses: lukka/run-vcpkg@v10.1
      with:
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'
        vcpkgGitCommitId: a3df696929b28195b0d7a477ba6cd16dba48fa52
        
    - name: Show VCPKG version for https://github.com/microsoft/vcpkg/issues/23448
      run: vcpkg.exe --version

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1

    - name: Setup VSTest Path
      uses: darenm/Setup-VSTest@v1

    - name: Ensure Proj packages are available
      run: vcpkg.exe install "tiff[core]:x64-windows-static-md" "proj[core,tiff]:x64-windows-static-md" "tiff[core]:x86-windows-static-md" "proj[core,tiff]:x86-windows-static-md"

    - name: Setup version
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: cmd.exe /C build\scripts\gh-version-setup vcpkg\installed\x86-windows-static-md\include\proj.h ${{ github.run_number }}

    - name: Create nupkg for db package
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: cmd.exe /C build\scripts\gh-build-nuget.cmd --db-only

    - name: Restore NuGet package (legacy style, vcxproj only)
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore build\src\SharpProj\SharpProj.vcxproj -SolutionDirectory build\src

    - name: Build-x86
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /r /v:m /p:Platform=x86 /p:Configuration=Release ${{env.SOLUTION_FILE_PATH}} @build\scripts\msbuild-version.rsp

    - name: Build-x64
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /r /v:m /p:Platform=x64 /p:Configuration=Release ${{env.SOLUTION_FILE_PATH}} @build\scripts\msbuild-version.rsp

    - name: Build-x86-Core
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /r /v:m /p:Platform=x86 /p:Configuration=ReleaseCore ${{env.SOLUTION_FILE_PATH}} @build\scripts\msbuild-version.rsp

    - name: Build-x64-Core
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /r /v:m /p:Platform=x64 /p:Configuration=ReleaseCore ${{env.SOLUTION_FILE_PATH}} @build\scripts\msbuild-version.rsp

    - name: VSTest-x86
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: vstest.console.exe /InIsolation /Platform:x86 build/src/SharpProj.Tests/bin/x86/Release/SharpProj.Tests.dll "--testcasefilter:TestCategory!=NeedsNetwork"

    - name: VSTest-x64
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: vstest.console.exe /InIsolation /Platform:x64 build/src/SharpProj.Tests/bin/x64/Release/SharpProj.Tests.dll "--testcasefilter:TestCategory!=NeedsNetwork"

    - name: VSTest-Core-x86
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: vstest.console.exe /InIsolation /Platform:x86 build/src/SharpProj.Tests/bin/x86/ReleaseCore/SharpProj.Tests.dll "--testcasefilter:TestCategory!=NeedsNetwork"

    - name: VSTest-Core-x64
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: vstest.console.exe /InIsolation /Platform:x64 build/src/SharpProj.Tests/bin/x64/ReleaseCore/SharpProj.Tests.dll "--testcasefilter:TestCategory!=NeedsNetwork"

    - name: Create nupkg files
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: cmd.exe /C build\scripts\gh-build-nuget.cmd

    - name: Package nupkg files
      uses: actions/upload-artifact@v2
      with:
        name: nupkg-files
        path: build/nuspec/bin/*.nupkg

    - name: Package pdb files
      uses: actions/upload-artifact@v2
      with:
        name: pdb-files
        path: |
          build/src/SharpProj/bin/*/SharpProj.pdb
          build/src/SharpProj.NetTopologySuite/bin/**/SharpProj.NetTopologySuite.pdb
